digraph {
method -> methodDeclaration;
methodDeclaration -> keywordMethod;
keywordMethod -> keyword;
keyword -> identifier;
identifier -> UALPHA;
UALPHA -> ALPHA;
identifier -> UALPHANUMERIC;
UALPHANUMERIC -> UALPHA;
UALPHANUMERIC -> DIGIT;
keywordMethod -> variable;
variable -> identifier;
methodDeclaration -> unaryMethod;
unaryMethod -> identifier;
methodDeclaration -> binaryMethod;
binaryMethod -> binary;
binary -> BINARYSYMBOL;
binaryMethod -> variable;
method -> methodSequence;
methodSequence -> PERIOD;
methodSequence -> pragmas;
pragmas -> pragma;
pragma -> pragmaMessage;
pragmaMessage -> keywordPragma;
keywordPragma -> keyword;
keywordPragma -> arrayItem;
arrayItem -> literal;
literal -> numberLiteral;
numberLiteral -> DIGITS;
DIGITS -> DIGIT;
numberLiteral -> PERIOD;
literal -> stringLiteral;
literal -> charLiteral;
literal -> arrayLiteral;
arrayLiteral -> arrayItem;
literal -> byteLiteral;
byteLiteral -> numberLiteral;
literal -> symbolLiteral;
symbolLiteral -> symbol;
symbol -> unary;
unary -> identifier;
symbol -> binary;
symbol -> multiword;
multiword -> keyword;
symbol -> stringLiteral;
literal -> nilLiteral;
literal -> trueLiteral;
literal -> falseLiteral;
arrayItem -> symbolLiteralArray;
symbolLiteralArray -> symbol;
arrayItem -> arrayLiteralArray;
arrayLiteralArray -> arrayItem;
arrayItem -> byteLiteralArray;
byteLiteralArray -> arrayItem;
pragmaMessage -> unaryPragma;
unaryPragma -> identifier;
pragmaMessage -> binaryPragma;
binaryPragma -> binary;
binaryPragma -> arrayItem;
methodSequence -> temporaries;
temporaries -> variable;
methodSequence -> statements;
}